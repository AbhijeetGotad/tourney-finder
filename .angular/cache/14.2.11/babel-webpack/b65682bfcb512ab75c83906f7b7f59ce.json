{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { DEFAULT_INTERRUPTSOURCES } from '@ng-idle/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@ng-idle/core\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-cookie-service\";\nimport * as i5 from \"src/app/components/core/misc/sign-up-page/signUp.service\";\nexport let SessionService = /*#__PURE__*/(() => {\n  class SessionService {\n    constructor(http, idle, router, cookieService, signUpSrv) {\n      this.http = http;\n      this.idle = idle;\n      this.router = router;\n      this.cookieService = cookieService;\n      this.signUpSrv = signUpSrv;\n      this.idleState = 'Not started.';\n      this.timedOut = false;\n      this.checkSession();\n    }\n\n    checkSession() {\n      // sets an idle timeout of 5 seconds, for testing purposes.\n      this.idle.setIdle(600); // sets a timeout period of 5 seconds. after 10 seconds of inactivity, the user will be considered timed out.\n\n      this.idle.setTimeout(120); // sets the default interrupts, in this case, things like clicks, scrolls, touches to the document\n\n      this.idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\n      this.idle.onIdleEnd.subscribe(() => {\n        this.idleState = 'No longer idle.';\n        console.log(this.idleState);\n        this.reset();\n      });\n      this.idle.onTimeout.subscribe(() => {\n        // this.childModal.hide();\n        this.idleState = 'Timed out!';\n        this.timedOut = true;\n        console.log(this.idleState);\n        this.signUpSrv.logout().subscribe(data => {\n          if (data.status == 'Success') {\n            this.cookieService.deleteAll();\n            this.router.navigate([\"/login\"]).then(() => {\n              window.location.reload();\n            });\n          }\n        });\n      });\n      this.idle.onIdleStart.subscribe(() => {\n        this.idleState = 'You\\'ve gone idle!';\n        console.log(this.idleState);\n      });\n      this.idle.onTimeoutWarning.subscribe(countdown => {\n        this.idleState = 'You will time out in ' + countdown + ' seconds!';\n        console.log(this.idleState);\n      });\n    }\n\n    reset() {\n      this.idle.watch();\n      this.timedOut = false;\n    }\n\n    stay() {\n      this.reset();\n    }\n\n    startIdle() {\n      this.idle.watch();\n    }\n\n    stopIdle() {\n      this.idle.stop();\n    }\n\n  }\n\n  SessionService.ɵfac = function SessionService_Factory(t) {\n    return new (t || SessionService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Idle), i0.ɵɵinject(i3.Router), i0.ɵɵinject(i4.CookieService), i0.ɵɵinject(i5.SignUpService));\n  };\n\n  SessionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SessionService,\n    factory: SessionService.ɵfac,\n    providedIn: 'root'\n  });\n  return SessionService;\n})();","map":null,"metadata":{},"sourceType":"module"}