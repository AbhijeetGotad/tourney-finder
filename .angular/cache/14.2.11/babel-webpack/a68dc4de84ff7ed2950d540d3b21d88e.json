{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Config } from 'src/app/core/config/config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./signUp.service\";\nimport * as i2 from \"../login-page/login.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/core/services/message-modal-service\";\nimport * as i5 from \"src/app/homepage-root/services/homepage.service\";\nimport * as i6 from \"@angular/flex-layout/flex\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/dialog\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/forms\";\n\nconst _c0 = function () {\n  return [\"/signup\"];\n};\n\nconst nacl = require('tweetnacl');\n\nexport let SignUpPageComponent = /*#__PURE__*/(() => {\n  class SignUpPageComponent {\n    constructor(signUpService, loginSrv, router, messageService, homeSer) {\n      this.signUpService = signUpService;\n      this.loginSrv = loginSrv;\n      this.router = router;\n      this.messageService = messageService;\n      this.homeSer = homeSer;\n      this.error_message = '';\n    }\n\n    ngOnInit() {\n      // this.homeSer.loggedPage = true;\n      this.initaliseForm();\n    }\n\n    initaliseForm() {\n      this.signupForm = new FormGroup({\n        firstName: new FormControl('', Validators.required),\n        lastName: new FormControl('', Validators.required),\n        email: new FormControl('', Validators.compose([Validators.required, Validators.email])),\n        phone: new FormControl('', Validators.required),\n        password: new FormControl('', Validators.compose([Validators.required, Validators.pattern(Config.pwdRegex)])),\n        role: new FormControl('', Validators.required),\n        orgName: new FormControl(''),\n        orgPhone: new FormControl('')\n      });\n    }\n\n    getErrorMessage(type) {\n      if (this.signupForm.controls['email'].hasError('required') && type == 'email') {\n        return 'Email ID is required';\n      } else if (this.signupForm.controls['password'].hasError('required') && type == 'pwd') {\n        return 'Password is required';\n      } else {\n        return '';\n      }\n    }\n\n    clearError() {\n      this.error_message = '';\n    }\n\n  }\n\n  SignUpPageComponent.ɵfac = function SignUpPageComponent_Factory(t) {\n    return new (t || SignUpPageComponent)(i0.ɵɵdirectiveInject(i1.SignUpService), i0.ɵɵdirectiveInject(i2.LoginService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MessageModalService), i0.ɵɵdirectiveInject(i5.HomepageService));\n  };\n\n  SignUpPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignUpPageComponent,\n    selectors: [[\"app-sign-up-page\"]],\n    decls: 55,\n    vars: 4,\n    consts: [[\"fxLayout\", \"column\", \"fxLayoutAlign\", \"space-between none\", 1, \"upload-audio-root\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-between center\", 1, \"grid-layout-row\", \"header-modal-action\"], [\"mat-dialog-title\", \"\", 1, \"no-margin\", \"header\"], [\"mat-dialog-close\", \"\", 1, \"cursor-pointer\", \"ico-small\"], [1, \"content-modal-action\", \"bottom-container\"], [\"fxLayout\", \"column\", \"fxLayoutGap\", \"24px\", 3, \"formGroup\"], [\"fxLayout\", \"column\", \"fxLayoutAlign\", \"flex-start flex-start\", 1, \"heading-section\", \"mb-20\", \"mt-10\"], [1, \"extra-bolder\", \"heading\", \"no-margin\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\", \"fxLayoutAlign\", \"flex-start flex-start\", \"fxLayoutGap\", \"30px\", 1, \"bottom-container\"], [\"fxLayout\", \"column\", 1, \"bottom-container\"], [\"fxLayoutAlign\", \"center stretch\", \"fxLayout\", \"column\", 1, \"grid-layout-column\"], [\"fxFlex\", \"100\", \"fxLayout.gt-xs\", \"row\", \"fxLayout.xs\", \"column\", \"fxLayoutGap\", \"2%\"], [\"fxLayout\", \"column\", \"fxFlex.gt-xs\", \"49\", \"fxFlex.xs\", \"100\", 1, \"no-label\"], [1, \"font-weight-light\", \"primary-text\", \"mb-5\"], [1, \"error-text\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"firstName\", \"placeholder\", \"First Name\"], [\"fxLayout\", \"column\", \"fxFlex.gt-xs\", \"49\", \"fxFlex.xs\", \"100\", 1, \"outline-input\", \"no-label\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"lastName\", \"placeholder\", \"Last Name\"], [\"fxLayout\", \"column\", \"fxFlex.gt-xs\", \"100\", \"fxFlex.xs\", \"100\", 1, \"outline-input\", \"no-label\"], [\"matInput\", \"\", \"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\"], [1, \"large-primary-button\", \"full-width\"], [\"fxLayoutAlign\", \"start center\", 1, \"full-width\", \"mt-15\", \"mb-10\"], [1, \"\"], [1, \"primary-text\", \"cursor-pointer\", \"bold\", 3, \"routerLink\"]],\n    template: function SignUpPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n        i0.ɵɵtext(3, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-icon\", 3);\n        i0.ɵɵtext(5, \"close\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"form\", 5)(8, \"div\", 6)(9, \"h1\", 7);\n        i0.ɵɵtext(10, \" Welcome, \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"p\");\n        i0.ɵɵtext(12, \"Let's get started with few simple steps\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 8)(14, \"div\", 9)(15, \"div\", 10)(16, \"div\", 11)(17, \"div\", 12)(18, \"label\", 13);\n        i0.ɵɵtext(19, \"First Name\");\n        i0.ɵɵelementStart(20, \"span\", 14);\n        i0.ɵɵtext(21, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"mat-form-field\");\n        i0.ɵɵelement(23, \"input\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 16)(25, \"label\", 13);\n        i0.ɵɵtext(26, \"Last Name\");\n        i0.ɵɵelementStart(27, \"span\", 14);\n        i0.ɵɵtext(28, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"mat-form-field\");\n        i0.ɵɵelement(30, \"input\", 17);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(31, \"div\", 11)(32, \"div\", 18)(33, \"label\", 13);\n        i0.ɵɵtext(34, \"Email\");\n        i0.ɵɵelementStart(35, \"span\", 14);\n        i0.ɵɵtext(36, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(37, \"mat-form-field\");\n        i0.ɵɵelement(38, \"input\", 19);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(39, \"div\", 11)(40, \"div\", 18)(41, \"label\", 13);\n        i0.ɵɵtext(42, \"Password\");\n        i0.ɵɵelementStart(43, \"span\", 14);\n        i0.ɵɵtext(44, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(45, \"mat-form-field\");\n        i0.ɵɵelement(46, \"input\", 20);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(47, \"button\", 21);\n        i0.ɵɵtext(48);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(49, \"div\", 22)(50, \"p\")(51, \"span\", 23);\n        i0.ɵɵtext(52, \"Already have an account?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"span\", 24);\n        i0.ɵɵtext(54, \"\\u00A0Login\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.signupForm);\n        i0.ɵɵadvance(41);\n        i0.ɵɵtextInterpolate1(\" \", \"Proceed\", \" \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n      }\n    },\n    dependencies: [i3.RouterLink, i6.DefaultLayoutDirective, i6.DefaultLayoutGapDirective, i6.DefaultLayoutAlignDirective, i6.DefaultFlexDirective, i7.MatIcon, i8.MatDialogClose, i8.MatDialogTitle, i9.MatFormField, i10.MatInput, i11.ɵNgNoValidate, i11.DefaultValueAccessor, i11.NgControlStatus, i11.NgControlStatusGroup, i11.FormGroupDirective, i11.FormControlName],\n    styles: [\".upload-audio-root{width:100%;height:100vh}.upload-audio-root .heading{color:var(--global-black);font-size:var(--font-size-big-head)}.upload-audio-root .btn-password .mat-icon{font-size:var(--font-size-title)!important;color:var(--color-black)}.upload-audio-root .content-modal-action .bottom-container{width:100%!important}\\n\"],\n    encapsulation: 2\n  });\n  return SignUpPageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}