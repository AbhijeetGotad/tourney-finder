{"ast":null,"code":"import { Config } from '../../../../core/config/config';\nimport { HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let SignUpService = /*#__PURE__*/(() => {\n  class SignUpService {\n    constructor(http) {\n      this.http = http;\n      this.captureTenantId = new BehaviorSubject('');\n      this.captureOriginDetails = new BehaviorSubject([]);\n      this.captureStatusFlag = new BehaviorSubject('');\n      this.baseUrl = Config.baseUrl;\n      this.signUpURL = this.baseUrl + 'login-i/';\n      this.logoutURL = this.baseUrl + 'login-i/logout';\n      this.getTenantDetURL = this.baseUrl + 'login-i/tenant';\n      this.searchEmpURL = this.baseUrl + 'search/elasticSearch';\n      this.checkAdminFlagsURL = this.baseUrl + 'jf3-home-i/adminSignUpAndCompletion';\n      this.getRecentHistoryURL = this.baseUrl + 'jf3-home-i/getRecentSearch';\n      this.getOriginURL = this.baseUrl + 'jf3-home-i/getLocationDetails';\n      this.getFilterValURL = this.baseUrl + 'jf3-home-i/filteredSearch';\n      this.saveRecentURL = this.baseUrl + 'jf3-home-i/saveRecentSearch';\n      this.clearRecentSearchURL = this.baseUrl + 'jf3-home-i/clearRecentSearch';\n      this.BASE_URL = this.baseUrl + 'jct-login-i';\n      this.CampaignUrl = this.baseUrl + 'jct-campaign-i/';\n      this.tenantId = '';\n      this.employeeCode = '';\n      this.employeeName = '';\n      this.firstTimeTenantSet = false;\n      this.isSignUp = false;\n    }\n\n    setTenantData(data) {\n      this.captureTenantId.next(data);\n    }\n\n    setOriginData(data) {\n      this.captureOriginDetails.next(data);\n    }\n\n    setStatusFlag(data) {\n      this.captureStatusFlag.next(data);\n    }\n\n    organisationList() {\n      return this.http.get(this.signUpURL + 'getOrgListSignUp');\n    }\n\n    checkUserDetailsExist(payload) {\n      // const httpOptions = {\n      //   headers: new HttpHeaders({\n      //     'Content-Type': 'application/json',\n      //   }),\n      // };\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        }),\n        withCredentials: true,\n        observe: 'response'\n      };\n      return this.http.post(this.signUpURL + 'checkUserDetailsExist', payload, httpOptions);\n    }\n\n    registerUser(payload) {\n      return this.http.post(this.signUpURL + 'registerUser', payload);\n    }\n\n    getTenantIdData() {\n      return this.http.get(this.getTenantDetURL);\n    }\n\n    logout() {\n      return this.http.get(this.logoutURL);\n    }\n\n    searchEmp(payload) {\n      return this.http.post(this.searchEmpURL, payload);\n    }\n\n    checkAdminCompletion(tenant) {\n      let payload = {\n        tenantId: tenant\n      };\n      return this.http.post(this.checkAdminFlagsURL, payload);\n    }\n\n    getRecentHistoryData(tenant, name) {\n      let payload = {\n        tenantId: tenant,\n        limit: 10,\n        page: 1,\n        createdBy: name\n      };\n      return this.http.post(this.getRecentHistoryURL, payload);\n    }\n\n    getOriginData(tenant) {\n      let payload = {\n        tenantId: tenant\n      };\n      return this.http.post(this.getOriginURL, payload);\n    }\n\n    getFilterValData(tenant) {\n      let payload = {\n        tenantId: tenant\n      };\n      return this.http.post(this.getFilterValURL, payload);\n    }\n\n    saveRecentSearch(payload) {\n      return this.http.post(this.saveRecentURL, payload);\n    }\n\n    clearRecenSearches(tenant) {\n      let payload = {\n        tenantId: tenant\n      };\n      return this.http.post(this.clearRecentSearchURL, payload);\n    }\n\n    sendOTP(payload) {\n      return this.http.post(this.BASE_URL + '/sendOTP', payload);\n    }\n\n    validateOTP(payload) {\n      return this.http.post(this.BASE_URL + '/verifyEmailOTPSignUp', payload);\n    }\n\n    getOnboarding(journeyId) {\n      journeyId = journeyId ? '?journeyId=' + journeyId.toString() : '';\n      return this.http.get(this.CampaignUrl + 'getOnboardingDetails' + journeyId);\n    }\n\n  }\n\n  SignUpService.ɵfac = function SignUpService_Factory(t) {\n    return new (t || SignUpService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  SignUpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SignUpService,\n    factory: SignUpService.ɵfac,\n    providedIn: 'root'\n  });\n  return SignUpService;\n})();","map":null,"metadata":{},"sourceType":"module"}