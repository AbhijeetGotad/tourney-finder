{"ast":null,"code":"import { EventEmitter, Renderer2 } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/homepage-root/services/homepage.service\";\nimport * as i2 from \"ng-dialog-animation\";\nimport * as i3 from \"../../core/misc/sign-up-page/signUp.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"ngx-cookie-service\";\nimport * as i6 from \"src/app/core/services/message-modal-service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/flex-layout/flex\";\n\nfunction HomeFooterComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3);\n    i0.ɵɵelement(3, \"img\", 4);\n    i0.ɵɵelementStart(4, \"div\", 5);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 6)(7, \"div\", 7);\n    i0.ɵɵtext(8, \"Regulatory\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\");\n    i0.ɵɵtext(10, \"|\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 7);\n    i0.ɵɵtext(12, \"Policies\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\");\n    i0.ɵɵtext(14, \"|\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 7);\n    i0.ɵɵtext(16, \"Terms & Conditions\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.footerDetail || \"-\", \" \");\n  }\n}\n\nexport let HomeFooterComponent = /*#__PURE__*/(() => {\n  class HomeFooterComponent {\n    constructor(renderer, homePageService, dialog, signUpService, router, cookieService, messageService) {\n      this.renderer = renderer;\n      this.homePageService = homePageService;\n      this.dialog = dialog;\n      this.signUpService = signUpService;\n      this.router = router;\n      this.cookieService = cookieService;\n      this.messageService = messageService;\n      this.searchTextChanged = new EventEmitter();\n    }\n\n    ngOnInit() {\n      // this.getTenantId();\n      if (!this.homePageService.loggedPage) {\n        this.getFooterDetail();\n      }\n    }\n\n    getFooterDetail() {\n      this.homePageService.getFooterDetail().subscribe(data => {\n        var _a;\n\n        if (data) {\n          this.footerDetail = (_a = data === null || data === void 0 ? void 0 : data.data) === null || _a === void 0 ? void 0 : _a.attributes.copyrights;\n        } else {}\n      }, err => {\n        this.messageService.showMessage(err.error.message || 'Something Went Wrong !!', \"Error\", \"warning-icon\", \"Close\");\n      });\n    } // onClickedOutside() {\n    //   this.focusInput = false;\n    // }\n    // getFilterValue(res: any) {\n    //   this.subscriptionsList.push(\n    //     this.signUpService.getFilterValData(res).subscribe((data: any) => {\n    //       if (data.status == 'Success') {\n    //         this.filterObj = data['result'];\n    //         this.filterObj = data['result']?.unstructured;\n    //         this.stateObj = data['result']?.unstructured?.state;\n    //         this.cityobj = data['result']?.unstructured?.city;\n    //         this.siteobj = data['result']?.unstructured?.site;\n    //       }\n    //     })\n    //   );\n    // }\n    // checkAdminData(res: any) {\n    //   console.log('Admin');\n    //   this.subscriptionsList.push(\n    //     this.signUpService.checkAdminCompletion(res).subscribe((data: any) => {\n    //       if (data) {\n    //         let allFlags = data['result'];\n    //         if (\n    //           allFlags?.adminExist &&\n    //           allFlags?.cameraExist &&\n    //           allFlags?.employeeExist &&\n    //           allFlags?.locationExist\n    //         ) {\n    //           this.signUpService.setStatusFlag('true');\n    //         } else {\n    //           this.signUpService.setStatusFlag('false');\n    //         }\n    //       } else {\n    //         this.signUpService.setStatusFlag('false');\n    //       }\n    //     })\n    //   );\n    // }\n    // getTenantId() {\n    //   // this.subscriptionsList.push(\n    //   //   this.signUpService.getTenantIdData().subscribe((data: any) => {\n    //   //     if (data.status === 'Success') {\n    //   //       this.tenantDet = data['result']['data'];\n    //   //       this.userName = data['result']['user'].name;\n    //   //       this.email = data['result']['user'].email;\n    //   //       this.tenantDet.forEach((tenant: any) => {\n    //   //         if (tenant.default) {\n    //   //           this.tenantSelected = tenant.tenantId;\n    //   //           this.signUpService.firstTimeTenantSet = false;\n    //   //           this.signUpService.tenantId = tenant.tenantId;\n    //   //           this.signUpService.setTenantData(tenant.tenantId);\n    //   //           this.mandatoryCalls();\n    //   //         }\n    //   //       });\n    //   //     }\n    //   //   })\n    //   // );\n    // }\n    // mandatoryCalls() {\n    //   this.checkAdminData(this.signUpService.tenantId);\n    //   this.getFilterValue(this.signUpService.tenantId);\n    //   this.getRecentHistory(this.signUpService.tenantId);\n    //   // let page = 1;\n    //   // let limit = 10;\n    //   // // this.employeeService.regognizedEmployee(page, 5, this.signUpService.tenantId, 'Running', 0);\n    //   // this.employeeService.regognizedEmployee(\n    //   //   page,\n    //   //   limit,\n    //   //   this.signUpService.tenantId,\n    //   //   'Attendance'\n    //   // );\n    //   // this.employeeService.employeesTableData(\n    //   //   page,\n    //   //   limit,\n    //   //   this.signUpService.tenantId\n    //   // );\n    // }\n\n\n    logoutUser() {// this.subscriptionsList.push(\n      //   this.signUpService.logout().subscribe((data: any) => {\n      //     if (data.status == 'Success') {\n      //       this.cookieService.deleteAll();\n      //       this.router.navigate(['/login']).then(() => {\n      //         window.location.reload();\n      //       });\n      //     }\n      //   })\n      // );\n    } // recentPeopleSearch() {\n    //   this.overlayReq = true;\n    //   this.subscriptionsList.push(this.signUpService.clearRecenSearches(this.signUpService.tenantId).subscribe((res:any)=>{\n    //     if(res.status == \"Success\"){\n    //       this.recentSearchData = [];\n    //     }\n    //   }))\n    // }\n    // updateDetAccToTenant(tenant: any) {\n    //   this.tenantSelected = tenant.value;\n    //   this.signUpService.tenantId = tenant.value;\n    //   this.signUpService.setTenantData(tenant.value);\n    //   this.mandatoryCalls();\n    // }\n    // setSearchText(name: string) {\n    //   this.searchVal = name;\n    //   this.getSearchResults('G', '');\n    // }\n    // getSearchResults(opr: string, type: string) {\n    //   this.focusInput = true\n    //   this.stringSearched = true;\n    //   let cityId = '';\n    //   let stateId = '';\n    //   this.copysiteObj = [];\n    //   this.copycityObj = [];\n    //   this.copystateObj = [];\n    //   let payload;\n    //   if (opr == 'G') {\n    //     payload = {\n    //       tenantId: this.tenantSelected,\n    //       searchStr: this.searchVal,\n    //       limit: 5,\n    //       page: 1,\n    //     };\n    //   } else {\n    //     //case\n    //     if (type == 'site') {\n    //       this.siteobj = this.filterObj.site;\n    //       this.cityVal = '';\n    //       this.stateVal = '';\n    //     } else if (type == 'city') {\n    //       this.cityobj = this.filterObj.city;\n    //       this.siteobj = this.filterObj.site;\n    //       this.siteVal = '';\n    //       this.stateVal = '';\n    //     } else if ((type = 'state')) {\n    //       //  this.stateObj = this.filterObj.state;\n    //       this.cityobj = this.filterObj.city;\n    //       this.siteobj = this.filterObj.site;\n    //       this.siteVal = '';\n    //       this.cityVal = '';\n    //     } else {\n    //     }\n    //     if (this.siteVal) {\n    //       this.siteobj.forEach((element: any) => {\n    //         if (element.siteLocation == this.siteVal) {\n    //           cityId = element.cityId;\n    //         }\n    //       });\n    //       this.cityobj.forEach((element: any) => {\n    //         if (element.cityId == cityId) {\n    //           this.cityVal = element.cityId;\n    //           stateId = element.stateId;\n    //           // this.copycityObj.push(element);\n    //         }\n    //       });\n    //       // this.cityobj = this.copycityObj;\n    //       this.stateObj.forEach((element: any) => {\n    //         if (element.stateId == stateId) {\n    //           this.stateVal = element.stateId;\n    //           //    this.copystateObj.push(element);\n    //         }\n    //       });\n    //       //this.stateObj = this.copystateObj;\n    //     } else if (this.cityVal) {\n    //       this.siteobj.forEach((element: any) => {\n    //         if (element.cityId == this.cityVal) {\n    //           this.copysiteObj.push(element);\n    //         }\n    //       });\n    //       this.siteobj = this.copysiteObj;\n    //       this.cityobj.forEach((element: any) => {\n    //         if (element.cityId == this.cityVal) {\n    //           stateId = element.stateId;\n    //         }\n    //       });\n    //       this.stateObj.forEach((element: any) => {\n    //         if (element.stateId == stateId) {\n    //           this.stateVal = element.stateId;\n    //         }\n    //       });\n    //     } else if (this.stateVal) {\n    //       this.cityobj.forEach((element: any) => {\n    //         if (element.stateId == this.stateVal) {\n    //           this.copycityObj.push(element);\n    //         }\n    //       });\n    //       this.cityobj = this.copycityObj;\n    //       this.siteobj = this.filterObj?.site;\n    //     }\n    //     payload = {\n    //       tenantId: this.tenantSelected,\n    //       searchStr: this.searchVal,\n    //       limit: 5,\n    //       page: 1,\n    //       countryId: 'IN',\n    //       stateId: this.stateVal,\n    //       cityId: this.cityVal,\n    //       siteLocation: this.siteVal,\n    //     };\n    //   }\n    //   this.searchTextChanged.emit(this.searchVal);\n    //   if (this.searchVal != undefined && this.searchVal != '') {\n    //     if (this.searchVal.length >= 3) {\n    //       this.subscriptionsList.push(\n    //         this.signUpService.searchEmp(payload).subscribe((data: any) => {\n    //           if (data.status == 'Success' && this.searchVal.length >= 3) {\n    //             this.actualSearchData = data['result'];\n    //             if(this.actualSearchData.length > 3){\n    //               this.onScroll();\n    //             }else{\n    //               this.searchResult = this.actualSearchData;\n    //             }\n    //           } else {\n    //             this.searchResult = [];\n    //           }\n    //         })\n    //       );\n    //     } else {\n    //       this.searchResult = [];\n    //       this.stringSearched = false;\n    //     }\n    //   } else {\n    //     this.searchResult = [];\n    //     this.stringSearched = false;\n    //   }\n    // }\n    // onScroll() {\n    //   if(this.actualSearchData.length == this.searchResult.length) { \n    //   }else{\n    //     if(this.searchResult.length == 0){\n    //       for (let i = 0; i <  10; i++){\n    //         this.searchResult.push(this.actualSearchData[i]);\n    //       }\n    //     }else{\n    //       let length = this.searchResult.length;\n    //     for (let i = length; i < length + 3; i++){\n    //       this.searchResult.push(this.actualSearchData[i]);\n    //     }\n    //   }\n    //   }\n    // }\n    // saveRecentSearch(item: any) {\n    //   let payload = {\n    //     tenantId: item.tenantId,\n    //     searchStr: item.employeeName,\n    //     employeeImage: item.imageIdFront,\n    //     createdBy: this.userName,\n    //     employeeCode: item.employeeCode,\n    //     employeeName: item.employeeName,\n    //     activeFlag: item.activeFlag,\n    //     blackListFlag: item.blacklistFlag,\n    //   };\n    //   this.subscriptionsList.push(\n    //     this.signUpService.saveRecentSearch(payload).subscribe((data: any) => {\n    //       if (data.status == 'Success') {\n    //         this.subscriptionsList.push(\n    //           this.signUpService.captureTenantId.subscribe((res) => {\n    //             if (res) {\n    //               this.getRecentHistory(res);\n    //             }\n    //           })\n    //         );\n    //         console.log('Data Saved Successfully!!');\n    //       }\n    //     })\n    //   );\n    // }\n    // selectEmployee(item: any) {\n    //   this.recentSearchData = [];\n    //   this.saveRecentSearch(item);\n    //   this.stringSearched = false;\n    //   this.searchResult = [];\n    //   this.signUpService.employeeCode = item.employeeCode;\n    //   this.signUpService.employeeName = item.employeeName;\n    //   // let dialogRef = this.dialog.open(EmpSummeryComponent, {\n    //   //   panelClass: 'emp-summary-animation',\n    //   //   width: '90vw',\n    //   //   height: '100vh',\n    //   //   autoFocus: false,\n    //   //   position: { right: '0' },\n    //   //   animation: { to: 'left' },\n    //   // });\n    //   // dialogRef.afterClosed().subscribe((result) => {});\n    // }\n    // getRecentHistory(res: any) {\n    //   this.subscriptionsList.push(\n    //     this.signUpService\n    //       .getRecentHistoryData(res, this.userName)\n    //       .subscribe((data: any) => {\n    //         if (data.status === 'Success') {\n    //           this.recentSearchData = data['result'];\n    //         }\n    //       })\n    //   );\n    // }\n\n\n    ngOnDestroy() {\n      this.signUpService.setStatusFlag('');\n    }\n\n  }\n\n  HomeFooterComponent.ɵfac = function HomeFooterComponent_Factory(t) {\n    return new (t || HomeFooterComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.HomepageService), i0.ɵɵdirectiveInject(i2.NgDialogAnimationService), i0.ɵɵdirectiveInject(i3.SignUpService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.CookieService), i0.ɵɵdirectiveInject(i6.MessageModalService));\n  };\n\n  HomeFooterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeFooterComponent,\n    selectors: [[\"app-home-footer\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"footer white-text mini-text\", \"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 4, \"ngIf\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 1, \"footer\", \"white-text\", \"mini-text\"], [\"fxLayout.gt-xs\", \"row\", \"fxLayout.lt-xs\", \"column\", \"fxLayoutAlign.gt-xs\", \"space-between center\", \"fxLayoutAlign.lt-xs\", \"center center\", 1, \"no-margin\", \"inner-content\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", \"fxLayoutGap\", \"16px\"], [\"src\", \"assets/images/svg/copyright-ico.svg\", \"alt\", \"copy-right\"], [1, \"copy-right-text\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", \"fxLayoutGap\", \"8px\", 1, \"copy-right-text\"], [1, \"cursor-pointer\"]],\n    template: function HomeFooterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, HomeFooterComponent_div_0_Template, 17, 1, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.homePageService.loggedPage);\n      }\n    },\n    dependencies: [i7.NgIf, i8.DefaultLayoutDirective, i8.DefaultLayoutGapDirective, i8.DefaultLayoutAlignDirective],\n    styles: [\".footer{background-color:var(--light-primary-50);height:65px;padding:24px 0 25px}.footer .copy-right-text{font-size:var(--font-size-mini);font-weight:500;line-height:16px}\\n\"],\n    encapsulation: 2\n  });\n  return HomeFooterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}