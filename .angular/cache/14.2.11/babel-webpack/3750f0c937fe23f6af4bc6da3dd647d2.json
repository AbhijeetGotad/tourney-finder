{"ast":null,"code":"import { ActivatedRoute, Router, RouterStateSnapshot } from \"@angular/router\";\nimport { Config } from \"../config/config\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-cookie-service\";\nexport let LoginGuardService = /*#__PURE__*/(() => {\n  class LoginGuardService {\n    constructor(router, cookieSrv) {\n      this.router = router;\n      this.cookieSrv = cookieSrv;\n    }\n\n    canActivate(route, state) {\n      var _a;\n\n      if (Config.landingUrl === \"\") {\n        Config.landingUrl = state.url != \"/\" ? state.url : \"\";\n      }\n\n      if (!navigator.onLine) {\n        return false;\n      } else {\n        if (Config.loggedIn) {\n          return true;\n        } else if (((_a = route.routeConfig) === null || _a === void 0 ? void 0 : _a.path) == 'set-password' && state.root.queryParams['linkid'] || Config.allowSetPassword) {\n          return true;\n        }\n\n        this.router.navigate([\"\"]);\n        ;\n        return false;\n      }\n    }\n\n  }\n\n  LoginGuardService.ɵfac = function LoginGuardService_Factory(t) {\n    return new (t || LoginGuardService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.CookieService));\n  };\n\n  LoginGuardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginGuardService,\n    factory: LoginGuardService.ɵfac\n  });\n  return LoginGuardService;\n})();","map":null,"metadata":{},"sourceType":"module"}