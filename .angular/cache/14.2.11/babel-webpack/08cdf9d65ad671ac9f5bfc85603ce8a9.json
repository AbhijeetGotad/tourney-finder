{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/flex-layout/flex\";\nimport * as i4 from \"@angular/flex-layout/extended\";\nimport * as i5 from \"@angular/material/core\";\nimport * as i6 from \"@angular/material/list\";\nimport * as i7 from \"@angular/material/sidenav\";\n\nconst _c0 = function (a0) {\n  return [a0];\n};\n\nfunction SidenavBarComponent_mat_list_item_5_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"a\", 12);\n  }\n\n  if (rf & 2) {\n    const menuItem_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(1, _c0, menuItem_r2.iconImage ? menuItem_r2.iconImage : \"\"));\n  }\n}\n\nfunction SidenavBarComponent_mat_list_item_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-list-item\", 7);\n    i0.ɵɵlistener(\"click\", function SidenavBarComponent_mat_list_item_5_Template_mat_list_item_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const menuItem_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.gotoMenuLink(menuItem_r2));\n    });\n    i0.ɵɵelementStart(1, \"div\", 8);\n    i0.ɵɵtemplate(2, SidenavBarComponent_mat_list_item_5_a_2_Template, 1, 3, \"a\", 9);\n    i0.ɵɵelementStart(3, \"span\", 10)(4, \"span\", 11);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const menuItem_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", menuItem_r2.isActive == 0 ? \"disabled\" : \"\" || ctx_r1.selectedItem == menuItem_r2.name ? \"active-nav-item\" : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !menuItem_r2.icon);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(menuItem_r2.displayName);\n  }\n}\n\nexport let SidenavBarComponent = /*#__PURE__*/(() => {\n  class SidenavBarComponent {\n    constructor(router) {\n      this.router = router;\n      this.menuList = [];\n      this.selectedItem = 'home';\n    }\n\n    ngOnInit() {\n      this.setMenuList();\n    }\n\n    gotoMenuLink(menuItem) {\n      this.selectedItem = menuItem.name;\n      let url = menuItem.route;\n\n      if (url) {\n        this.router.navigate([url]);\n      }\n    }\n\n    setMenuList() {\n      this.menuList = [{\n        bu_menu_sequence: 1,\n        displayName: 'Home',\n        iconImage: 'sidebar-ico home-sidebar-ico',\n        is_folder: 0,\n        menuid: 'home',\n        name: 'home',\n        route: '/landing/homeUser',\n        sequence: 1,\n        shortDescription: '',\n        isActive: 1\n      }, {\n        bu_menu_sequence: 2,\n        displayName: 'Competitions',\n        iconImage: 'sidebar-ico services-sidebar-ico',\n        is_folder: 0,\n        menuid: 'competitions',\n        name: 'competitions',\n        route: '/landing/competitions-list',\n        sequence: 2,\n        shortDescription: '',\n        isActive: 1\n      }, {\n        bu_menu_sequence: 3,\n        displayName: 'My List',\n        iconImage: 'sidebar-ico leadlist-sidebar-ico',\n        is_folder: 0,\n        menuid: 'leadlist',\n        name: 'leadlist',\n        route: '/landing/my-competitions-list',\n        sequence: 3,\n        shortDescription: '',\n        isActive: 1\n      }, {\n        bu_menu_sequence: 4,\n        displayName: 'Turf',\n        iconImage: 'sidebar-ico leadlist-sidebar-ico',\n        is_folder: 0,\n        menuid: 'leadlist',\n        name: 'leadlist',\n        route: '',\n        sequence: 3,\n        shortDescription: '',\n        isActive: 0\n      }, {\n        bu_menu_sequence: 5,\n        displayName: 'Setting',\n        iconImage: 'sidebar-ico settings-sidebar-ico',\n        is_folder: 0,\n        menuid: 'settings',\n        name: 'settings',\n        route: '',\n        sequence: 4,\n        shortDescription: '',\n        isActive: 0\n      }];\n    }\n\n    staticDataMenu(name, url) {\n      this.selectedItem = name;\n      this.router.navigate([url]);\n    }\n\n  }\n\n  SidenavBarComponent.ɵfac = function SidenavBarComponent_Factory(t) {\n    return new (t || SidenavBarComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  SidenavBarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SidenavBarComponent,\n    selectors: [[\"app-sidenav-bar\"]],\n    decls: 8,\n    vars: 3,\n    consts: [[1, \"sidenav-container\"], [\"autosize\", \"\"], [3, \"mode\", \"opened\"], [\"drawer\", \"\"], [1, \"scrollable-content\"], [\"routerLinkActive\", \"active-nav-item\", \"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", \"class\", \"mb-5\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"matDrawerContent\"], [\"routerLinkActive\", \"active-nav-item\", \"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 1, \"mb-5\", 3, \"ngClass\", \"click\"], [\"fxLayout\", \"column\", \"fxLayoutAlign\", \"center center\"], [\"mat-list-icon\", \"\", 3, \"ngClass\", 4, \"ngIf\"], [\"mat-line\", \"\", \"fxLayout\", \"row\", \"fxLayoutGap\", \"10px\", \"fxLayoutAlign\", \"start center\"], [1, \"menu-text\"], [\"mat-list-icon\", \"\", 3, \"ngClass\"]],\n    template: function SidenavBarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-drawer-container\", 1)(2, \"mat-drawer\", 2, 3)(4, \"mat-nav-list\", 4);\n        i0.ɵɵtemplate(5, SidenavBarComponent_mat_list_item_5_Template, 6, 3, \"mat-list-item\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"mat-drawer-content\", 6);\n        i0.ɵɵelement(7, \"router-outlet\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"mode\", \"side\")(\"opened\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.menuList);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i1.RouterOutlet, i1.RouterLinkActive, i3.DefaultLayoutDirective, i3.DefaultLayoutGapDirective, i3.DefaultLayoutAlignDirective, i4.DefaultClassDirective, i5.MatLine, i6.MatNavList, i6.MatListItem, i6.MatListIconCssMatStyler, i7.MatDrawer, i7.MatDrawerContainer, i7.MatDrawerContent],\n    styles: [\".mat-drawer .mat-drawer-inner-container{overflow:hidden!important}.sidenav-container .mat-list-base .mat-list-item.mat-list-item-with-avatar,.sidenav-container .mat-list-base .mat-list-option.mat-list-item-with-avatar{height:auto;padding:7px 0}.sidenav-container .mat-list-base .mat-list-item.active-nav-item{font-weight:500!important;color:var(--primary-50)!important}.sidenav-container .mat-list-base .mat-list-item .mat-list-icon.sidebar-ico{height:32px;width:32px;font-size:32px;border-radius:0;background-repeat:no-repeat;display:inline-block;background-size:32px;background-position:center;padding:0}.sidenav-container .mat-list-base .mat-list-item .menu-text{font-size:var(--font-size-mini);margin-top:5px}.home-sidebar-ico{background-image:url(home-sidebar.svg)}.sidenav-container .mat-list-item.active-nav-item .home-sidebar-ico{background-image:url(home-sidebar-selected.svg)}.leadlist-sidebar-ico{background-image:url(employee-sidebar.svg)}.sidenav-container .mat-list-item.active-nav-item .leadlist-sidebar-ico{background-image:url(employee-sidebar-selected.svg)}.services-sidebar-ico{background-image:url(services-sidebar.svg)}.sidenav-container .mat-list-item.active-nav-item .services-sidebar-ico{background-image:url(services-sidebar-selected.svg)}.settings-sidebar-ico{background-image:url(settings-sidebar.svg)}.sidenav-container .mat-list-item.active-nav-item .settings-sidebar-ico{background-image:url(settings-sidebar-selected.svg)}\\n\"],\n    encapsulation: 2\n  });\n  return SidenavBarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}