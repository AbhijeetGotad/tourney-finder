{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { timer } from 'rxjs';\nimport { Config } from 'src/app/core/config/config';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./login.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/homepage-root/services/homepage.service\";\nimport * as i4 from \"../sign-up-page/signUp.service\";\nimport * as i5 from \"ngx-cookie-service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/flex-layout/flex\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/dialog\";\nimport * as i11 from \"@angular/material/form-field\";\nimport * as i12 from \"@angular/material/input\";\nimport * as i13 from \"@angular/forms\";\nimport * as i14 from \"../../../../validation.directive\";\n\nfunction LoginPageComponent_h1_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\", 20);\n    i0.ɵɵtext(1, \" Hi there, Welcome back \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginPageComponent_mat_error_17_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 23);\n    i0.ɵɵtext(1, \"cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginPageComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\")(1, \"div\", 21);\n    i0.ɵɵtemplate(2, LoginPageComponent_mat_error_17_mat_icon_2_Template, 2, 0, \"mat-icon\", 22);\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.getErrorMessage(\"email\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.getErrorMessage(\"email\"));\n  }\n}\n\nfunction LoginPageComponent_mat_form_field_18_mat_error_4_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 23);\n    i0.ɵɵtext(1, \"cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginPageComponent_mat_form_field_18_mat_error_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\")(1, \"div\", 21);\n    i0.ɵɵtemplate(2, LoginPageComponent_mat_form_field_18_mat_error_4_mat_icon_2_Template, 2, 0, \"mat-icon\", 22);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.getErrorMessage(\"pwd\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r7.getErrorMessage(\"pwd\"), \" \");\n  }\n}\n\nfunction LoginPageComponent_mat_form_field_18_mat_icon_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-icon\", 28);\n    i0.ɵɵlistener(\"click\", function LoginPageComponent_mat_form_field_18_mat_icon_6_Template_mat_icon_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.hide = true);\n    });\n    i0.ɵɵtext(1, \" visibility \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginPageComponent_mat_form_field_18_mat_icon_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-icon\", 28);\n    i0.ɵɵlistener(\"click\", function LoginPageComponent_mat_form_field_18_mat_icon_7_Template_mat_icon_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.hide = false);\n    });\n    i0.ɵɵtext(1, \" visibility_off \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginPageComponent_mat_form_field_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-form-field\")(1, \"mat-label\", 24);\n    i0.ɵɵtext(2, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 25);\n    i0.ɵɵlistener(\"keyup\", function LoginPageComponent_mat_form_field_18_Template_input_keyup_3_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.clearError());\n    })(\"keydown.enter\", function LoginPageComponent_mat_form_field_18_Template_input_keydown_enter_3_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.logformdata.valid ? ctx_r17.generateKeyPair() : \"\");\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, LoginPageComponent_mat_form_field_18_mat_error_4_Template, 4, 2, \"mat-error\", 12);\n    i0.ɵɵelementStart(5, \"button\", 26);\n    i0.ɵɵtemplate(6, LoginPageComponent_mat_form_field_18_mat_icon_6_Template, 2, 0, \"mat-icon\", 27);\n    i0.ɵɵtemplate(7, LoginPageComponent_mat_form_field_18_mat_icon_7_Template, 2, 0, \"mat-icon\", 27);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"type\", ctx_r2.hide ? \"password\" : \"text\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.logformdata.controls[\"password\"].invalid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.hide);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.hide);\n  }\n}\n\nfunction LoginPageComponent_span_19_mat_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 31);\n    i0.ɵɵtext(1, \"cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginPageComponent_span_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 29);\n    i0.ɵɵtemplate(1, LoginPageComponent_span_19_mat_icon_1_Template, 2, 0, \"mat-icon\", 30);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.error_message);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.error_message, \"\");\n  }\n}\n\nconst _c0 = function () {\n  return [\"/forget-password\"];\n};\n\nfunction LoginPageComponent_p_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 32)(1, \"span\", 19);\n    i0.ɵɵtext(2, \" Forgot password?\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(1, _c0));\n  }\n}\n\nfunction LoginPageComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 33)(2, \"mat-form-field\")(3, \"mat-label\");\n    i0.ɵɵtext(4, \"URL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\");\n    i0.ɵɵtext(7, \".jiocoludtelephony.com\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"alphabetsOnly\", true);\n  }\n}\n\nconst _c1 = function () {\n  return [\"/signup\"];\n};\n\nconst nacl = require('tweetnacl');\n\nnacl.util = require('tweetnacl-util');\nexport let LoginPageComponent = /*#__PURE__*/(() => {\n  class LoginPageComponent {\n    constructor(loginSrv, router, homepageSer, signup, cookieService, data) {\n      this.loginSrv = loginSrv;\n      this.router = router;\n      this.homepageSer = homepageSer;\n      this.signup = signup;\n      this.cookieService = cookieService;\n      this.data = data;\n      this.hide = true;\n      this.domaincount = false;\n      this.emailEntered = false;\n      this.logformdata = new FormGroup({\n        userName: new FormControl('', Validators.compose([Validators.required, Validators.email])),\n        password: new FormControl('', Validators.compose([Validators.required])),\n        url: new FormControl('')\n      });\n      this.error_message = '';\n      this.loginTimer = 0;\n      this.authDetails = {};\n      this.cookieService.deleteAll();\n      this.cookieService.deleteAll('/', Config.baseUrl);\n    }\n\n    ngOnInit() {\n      var _a; // this.homepageSer.loggedPage = true;\n\n\n      if (!this.signup.isSignUp) {\n        this.loginSrv.email = '';\n        this.loginSrv.organisationName = '';\n      } else {\n        (_a = this.logformdata.get('userName')) === null || _a === void 0 ? void 0 : _a.patchValue(this.loginSrv.email);\n      }\n    }\n\n    getErrorMessage(type) {\n      if (this.logformdata.controls['userName'].hasError('required') && type == 'email') {\n        return 'Email ID is required';\n      } else if (this.logformdata.controls['password'].hasError('required') && type == 'pwd') {\n        return 'Password is required';\n      } else {\n        return '';\n      }\n    }\n\n    clearPassword() {}\n\n    generateKeyPair() {\n      if (this.emailEntered) {\n        let username = this.logformdata.controls['userName'].value;\n        let deviceInfo = username + '_' + this.getRandomNoGenerate();\n        this.loginSrv.deviceInfo = deviceInfo;\n        let deviceData = {\n          emailId: username\n        };\n        this.loginSrv.getKeyaPI(deviceData).subscribe(data => {\n          if (data.result) {\n            this.publicKey = new Uint8Array(data.result.publicKey);\n            this.secretKey = new Uint8Array(data.result.secretKey);\n            this.one_time_code = nacl.randomBytes(24);\n            this.cipher_text = nacl.box(nacl.util.decodeUTF8(this.logformdata.controls['password'].value), this.one_time_code, this.publicKey, this.secretKey);\n            this.verifyLoginCredentials();\n          } else {}\n        }, error => {});\n      } else {\n        if (this.domaincount) {\n          this.domainApiCall();\n        } else {\n          let payloads = {\n            emailId: this.logformdata.value.userName\n          };\n\n          if (!this.loginSrv.email) {\n            this.loginSrv.email = this.logformdata.value.userName;\n          }\n\n          this.validateEmail(payloads);\n        }\n      }\n    }\n\n    domainApiCall() {\n      let payload = {\n        emailId: this.logformdata.value.userName,\n        domainName: this.logformdata.value.url\n      };\n      this.loginSrv.saveDomain(payload).subscribe(response => {\n        var _a;\n\n        if ((_a = response === null || response === void 0 ? void 0 : response.message) === null || _a === void 0 ? void 0 : _a.status) {\n          this.emailEntered = true;\n          this.domaincount = false;\n        } else {\n          this.domaincount = true;\n          this.emailEntered = false;\n        }\n      }, error => {});\n    }\n\n    validateEmail(payload) {\n      this.loginSrv.validateEmail(payload).subscribe(response => {\n        var _a, _b, _c, _d, _e, _f, _g;\n\n        if ((_a = response === null || response === void 0 ? void 0 : response.message) === null || _a === void 0 ? void 0 : _a.status) {\n          if (((_b = response === null || response === void 0 ? void 0 : response.message) === null || _b === void 0 ? void 0 : _b.domainMappedCount) > 1) {\n            this.domainCountValue = (_c = response === null || response === void 0 ? void 0 : response.message) === null || _c === void 0 ? void 0 : _c.domainMappedCount;\n            this.domaincount = true;\n          } else {\n            this.emailEntered = true;\n            this.domaincount = false;\n            this.domainCountValue = (_d = response === null || response === void 0 ? void 0 : response.message) === null || _d === void 0 ? void 0 : _d.domainMappedCount;\n          }\n\n          this.authDetails.domain = (_e = response === null || response === void 0 ? void 0 : response.message) === null || _e === void 0 ? void 0 : _e.domainName;\n          this.authDetails.url = (_f = response === null || response === void 0 ? void 0 : response.message) === null || _f === void 0 ? void 0 : _f.domainUrl; // var newWindow:any = window.open('http://jio.hrplatformdev.ril.com/jct/');\n          // // Access it using its variable\n          // newWindow.userDetails = this.authDetails;\n        } else {\n          this.error_message = (_g = response === null || response === void 0 ? void 0 : response.message) === null || _g === void 0 ? void 0 : _g.msg;\n        }\n      }, error => {});\n    }\n\n    disableForm() {\n      if (this.emailEntered) {\n        return !this.logformdata.valid;\n      } else {\n        return !this.logformdata.controls['userName'].valid;\n      }\n    }\n\n    getRandomNoGenerate() {\n      const crypto = window.crypto;\n      var array = new Uint32Array(1);\n      let FileId = crypto.getRandomValues(array); // Compliant for security-sensitive use casesconst FileId = array[0];\n\n      return FileId;\n    }\n\n    verifyLoginCredentials() {\n      let loginPayload = {\n        domainCount: this.domainCountValue,\n        username: this.logformdata.controls['userName'].value,\n        password: this.cipher_text,\n        OneTimeCode: this.one_time_code\n      };\n      this.loginSrv.loginUser(loginPayload).subscribe(data => {\n        var _a, _b, _c;\n\n        if (data.status == 'Success') {\n          this.loginSrv.email = (_a = data === null || data === void 0 ? void 0 : data.data) === null || _a === void 0 ? void 0 : _a.userId;\n          this.loginSrv.mobile = (_b = data === null || data === void 0 ? void 0 : data.data) === null || _b === void 0 ? void 0 : _b.mobileNo;\n          this.authDetails.email = (_c = data === null || data === void 0 ? void 0 : data.data) === null || _c === void 0 ? void 0 : _c.userId;\n          Config.loggedIn = true;\n          this.loginSrv.sessionLogin = true;\n          this.homepageSer.loggedPage = true;\n          this.router.navigateByUrl('/landing/homeUser');\n          console.log(window);\n          const customEvent = new CustomEvent('AuthorizeDetails', {\n            detail: this.authDetails\n          });\n          window.dispatchEvent(customEvent); // this.router.navigate(['/otp-verification']);\n        } else {\n          this.error_message = data === null || data === void 0 ? void 0 : data.message; // this.messageService.showMessage(\n          //   data?.message,\n          //   \"Error\",\n          //   \"error-icon\",\n          //   \"CLOSE\"\n          // );\n        }\n      }, error => {\n        this.error_message = error.error.message; // this.loginTimer = error.error.ttl;\n        // if (this.loginTimer > 0) {\n        //   this.loginTimerSub?.unsubscribe();\n        //   this.startTimer();\n        // }\n        // this.toastService.errorToast(error.error.message)\n      });\n    }\n\n    clearError() {\n      this.error_message = ''; // this.loginTimer = 0;\n    }\n\n    startTimer() {\n      let login_timer = timer(0, 1000);\n      this.loginTimerSub = login_timer.subscribe(t => {\n        if (this.loginTimer !== 0) {\n          this.loginTimer--;\n        } else {\n          this.error_message = '';\n          this.loginTimerSub.unsubscribe();\n        }\n      });\n    }\n\n  }\n\n  LoginPageComponent.ɵfac = function LoginPageComponent_Factory(t) {\n    return new (t || LoginPageComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.HomepageService), i0.ɵɵdirectiveInject(i4.SignUpService), i0.ɵɵdirectiveInject(i5.CookieService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  LoginPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPageComponent,\n    selectors: [[\"app-login-page\"]],\n    decls: 30,\n    vars: 11,\n    consts: [[\"fxLayout\", \"column\", \"fxLayoutAlign\", \"space-between none\", 1, \"upload-audio-root\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-between center\", 1, \"grid-layout-row\", \"header-modal-action\"], [\"mat-dialog-title\", \"\", 1, \"no-margin\", \"header\"], [\"mat-dialog-close\", \"\", 1, \"cursor-pointer\", \"ico-small\"], [1, \"content-modal-action\", \"scrollable-content\"], [\"fxLayout\", \"column\", \"fxLayoutGap\", \"24px\", 1, \"outline-input\"], [\"fxLayout\", \"column\", \"fxLayoutAlign\", \"center center\", \"fxFlex\", \"100%\", 3, \"formGroup\"], [\"fxLayoutAlign\", \"flex-start flex-start\", 1, \"heading-section\", \"mb-20\", \"mt-10\"], [\"class\", \"extra-bolder heading no-margin\", 4, \"ngIf\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\", \"fxLayoutAlign\", \"flex-start flex-start\", \"fxLayoutGap\", \"30px\"], [\"fxFlex\", \"100%\", \"fxLayout\", \"column\"], [\"matInput\", \"\", \"formControlName\", \"userName\", \"autocomplete\", \"off\", \"placeholder\", \"Enter Email ID\", 3, \"keyup\"], [4, \"ngIf\"], [\"class\", \"error-text mini-text mb-5\", 4, \"ngIf\"], [\"fxFlex\", \"100%\", \"class\", \"mt-10 mb\", \"fxLayoutAlign\", \"flex-end flex-end\", 4, \"ngIf\"], [\"fxFlex\", \"100%\", \"fxLayout\", \"column\", 4, \"ngIf\"], [1, \"large-primary-button\", \"full-width\", 3, \"disabled\", \"click\"], [\"fxLayoutAlign\", \"start center\", 1, \"full-width\", \"mt-15\", \"mb-10\"], [1, \"\"], [1, \"primary-text\", \"cursor-pointer\", \"bold\", 3, \"routerLink\"], [1, \"extra-bolder\", \"heading\", \"no-margin\"], [\"fxLayout\", \"row\"], [\"class\", \"mr-5\", 4, \"ngIf\"], [1, \"mr-5\"], [\"fxFlex\", \"100%\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"autocomplete\", \"off\", 3, \"type\", \"keyup\", \"keydown.enter\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 1, \"btn-password\"], [\"fxFlex\", \"100%\", 3, \"click\", 4, \"ngIf\"], [\"fxFlex\", \"100%\", 3, \"click\"], [1, \"error-text\", \"mini-text\", \"mb-5\"], [\"class\", \"ico-mini mr-5\", 4, \"ngIf\"], [1, \"ico-mini\", \"mr-5\"], [\"fxFlex\", \"100%\", \"fxLayoutAlign\", \"flex-end flex-end\", 1, \"mt-10\", \"mb\"], [\"fxLayoutGap\", \"24px\", \"fxLayout\", \"row\", \"fxLayoutAlign\", \"start center\", 1, \"input1\", \"mt-10\"], [\"matInput\", \"\", \"placeholder\", \"Enter URL\", \"formControlName\", \"url\", \"appValidation\", \"\", \"autocomplete\", \"off\", \"maxlength\", \"50\", 3, \"alphabetsOnly\"]],\n    template: function LoginPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n        i0.ɵɵtext(3, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-icon\", 3);\n        i0.ɵɵtext(5, \"close\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"form\", 6)(9, \"div\", 7);\n        i0.ɵɵtemplate(10, LoginPageComponent_h1_10_Template, 2, 0, \"h1\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 10)(13, \"mat-form-field\")(14, \"mat-label\");\n        i0.ɵɵtext(15, \"Enter Email ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 11);\n        i0.ɵɵlistener(\"keyup\", function LoginPageComponent_Template_input_keyup_16_listener() {\n          return ctx.clearError();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, LoginPageComponent_mat_error_17_Template, 5, 2, \"mat-error\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(18, LoginPageComponent_mat_form_field_18_Template, 8, 4, \"mat-form-field\", 12);\n        i0.ɵɵtemplate(19, LoginPageComponent_span_19_Template, 4, 2, \"span\", 13);\n        i0.ɵɵtemplate(20, LoginPageComponent_p_20_Template, 3, 2, \"p\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, LoginPageComponent_div_21_Template, 8, 1, \"div\", 15);\n        i0.ɵɵelementStart(22, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function LoginPageComponent_Template_button_click_22_listener() {\n          return ctx.generateKeyPair();\n        });\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 17)(25, \"p\")(26, \"span\", 18);\n        i0.ɵɵtext(27, \"Don't have an account?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"span\", 19);\n        i0.ɵɵtext(29, \"\\u00A0Sign up\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.logformdata);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.signup.isSignUp);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.logformdata.controls[\"userName\"].invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.emailEntered);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.error_message);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.domaincount === false && ctx.emailEntered);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.domaincount === true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.disableForm());\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", \"Proceed\", \" \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(10, _c1));\n      }\n    },\n    dependencies: [i6.NgIf, i2.RouterLink, i7.DefaultLayoutDirective, i7.DefaultLayoutGapDirective, i7.DefaultLayoutAlignDirective, i7.DefaultFlexDirective, i8.MatIcon, i9.MatButton, i10.MatDialogClose, i10.MatDialogTitle, i11.MatError, i11.MatFormField, i11.MatLabel, i11.MatSuffix, i12.MatInput, i13.ɵNgNoValidate, i13.DefaultValueAccessor, i13.NgControlStatus, i13.NgControlStatusGroup, i13.MaxLengthValidator, i13.FormGroupDirective, i13.FormControlName, i14.ValidationDirective],\n    styles: [\".upload-audio-root{width:100%;height:100vh}.upload-audio-root .heading{color:var(--global-black);font-size:var(--font-size-big-head)}.upload-audio-root .btn-password .mat-icon{font-size:var(--font-size-title)!important;color:var(--color-black)}\\n\"],\n    encapsulation: 2\n  });\n  return LoginPageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}