{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Config } from 'src/app/core/config/config';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SignUpPageComponent } from '../sign-up-page/sign-up-page.component';\nlet LoginPageComponent = class LoginPageComponent {\n  constructor(loginSrv, router, dialog, homepageSer, signup, cookieService, toastService, data, dialogRefSelf) {\n    this.loginSrv = loginSrv;\n    this.router = router;\n    this.dialog = dialog;\n    this.homepageSer = homepageSer;\n    this.signup = signup;\n    this.cookieService = cookieService;\n    this.toastService = toastService;\n    this.data = data;\n    this.dialogRefSelf = dialogRefSelf;\n    this.hide = true;\n    this.logformdata = new FormGroup({\n      userName: new FormControl('', Validators.compose([Validators.required, Validators.email])),\n      password: new FormControl('', Validators.compose([Validators.required]))\n    });\n    this.error_message = '';\n    this.cookieService.deleteAll();\n    this.cookieService.deleteAll('/', Config.baseUrl);\n  }\n\n  ngOnInit() {\n    var _a; // this.homepageSer.loggedPage = true;\n\n\n    if (!this.signup.isSignUp) {\n      this.loginSrv.email = '';\n    } else {\n      (_a = this.logformdata.get('userName')) === null || _a === void 0 ? void 0 : _a.patchValue(this.loginSrv.email);\n    }\n  }\n\n  getErrorMessage(type) {\n    if (this.logformdata.controls['userName'].hasError('required') && type == 'email') {\n      return 'Email ID is required';\n    } else if (this.logformdata.controls['password'].hasError('required') && type == 'pwd') {\n      return 'Password is required';\n    } else {\n      return '';\n    }\n  }\n\n  clearPassword() {}\n\n  generateKeyPair() {\n    this.toastService.successToast('Login Successful');\n    this.loginSrv.email = this.logformdata.value.userName;\n    this.loginSrv.mobile = '9898989898';\n    Config.loggedIn = true;\n    this.loginSrv.sessionLogin = true;\n    this.homepageSer.loggedPage = true;\n    this.router.navigateByUrl('/landing/homeUser');\n    this.dialogRefSelf.close();\n  }\n\n  clearError() {\n    this.error_message = '';\n  }\n\n  signUp() {\n    this.dialogRefSelf.close();\n    this.dialog.open(SignUpPageComponent, {\n      panelClass: 'rtl-dialog-box',\n      width: '540px',\n      height: '100vh',\n      autoFocus: false,\n      position: {\n        right: '0'\n      },\n      animation: {\n        to: 'left'\n      }\n    });\n  }\n\n};\nLoginPageComponent = __decorate([Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss'],\n  encapsulation: ViewEncapsulation.None\n}), __param(7, Inject(MAT_DIALOG_DATA))], LoginPageComponent);\nexport { LoginPageComponent };","map":null,"metadata":{},"sourceType":"module"}