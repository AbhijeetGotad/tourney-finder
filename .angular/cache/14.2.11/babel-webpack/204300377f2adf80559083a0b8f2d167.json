{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Config } from '../../../../../core/config/config';\nimport { timer } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/message-modal-service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../../../core/services/otp-verification.service\";\nimport * as i4 from \"../login.service\";\nimport * as i5 from \"ngx-cookie-service\";\nimport * as i6 from \"src/app/core/services/session.service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/flex-layout/flex\";\nimport * as i9 from \"@angular/material/card\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"@angular/material/button\";\nimport * as i12 from \"@angular/material/input\";\nimport * as i13 from \"@angular/forms\";\nimport * as i14 from \"../../../../../validation.directive\";\nconst _c0 = [\"formRow\"];\n\nfunction OtpInputComponent_input_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 22, 23);\n    i0.ɵɵlistener(\"keyup\", function OtpInputComponent_input_22_Template_input_keyup_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const i_r8 = restoredCtx.index;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.keyUpEvent($event, i_r8));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r8 = ctx.index;\n    i0.ɵɵpropertyInterpolate1(\"formControlName\", \"otpInput\", i_r8 + 1, \"\");\n    i0.ɵɵproperty(\"numericOnly\", true);\n  }\n}\n\nfunction OtpInputComponent_div_23_mat_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 26);\n    i0.ɵɵtext(1, \"cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction OtpInputComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, OtpInputComponent_div_23_mat_icon_1_Template, 2, 0, \"mat-icon\", 25);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.errorMessage == \"Invalid OTP\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r1.errorMessage, \"(\", ctx_r1.noOfAttempts, \"/3) \");\n  }\n}\n\nfunction OtpInputComponent_div_24_mat_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 26);\n    i0.ɵɵtext(1, \"cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction OtpInputComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, OtpInputComponent_div_24_mat_icon_1_Template, 2, 0, \"mat-icon\", 25);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isuserLocked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.errorMessage, \" \");\n  }\n}\n\nfunction OtpInputComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Note: After 3 attempts, you will not be able to login for 15 minutes \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction OtpInputComponent_div_26_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function OtpInputComponent_div_26_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onSubmit());\n    });\n    i0.ɵɵtext(1, \" Submit \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r14.otpformdata.valid);\n  }\n}\n\nfunction OtpInputComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtemplate(1, OtpInputComponent_div_26_button_1_Template, 2, 1, \"button\", 29);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.isuserLocked);\n  }\n}\n\nfunction OtpInputComponent_div_27_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function OtpInputComponent_div_27_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onCancel());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r17.errorMessage == \"Invalid OTP\" && ctx_r17.noOfAttempts == 3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind3(2, 2, ctx_r17.timerVal * 1000, \"mm:ss\", \"UTC\"), \" \");\n  }\n}\n\nfunction OtpInputComponent_div_27_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function OtpInputComponent_div_27_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.onResend());\n    });\n    i0.ɵɵtext(1, \" Resend OTP \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r18.errorMessage == \"Invalid OTP\" && ctx_r18.noOfAttempts == 3);\n  }\n}\n\nfunction OtpInputComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, OtpInputComponent_div_27_button_1_Template, 3, 6, \"button\", 32);\n    i0.ɵɵtemplate(2, OtpInputComponent_div_27_button_2_Template, 2, 1, \"button\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.enableResend);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.enableResend);\n  }\n}\n\nconst _c1 = function () {\n  return [\"/login\"];\n};\n\nfunction OtpInputComponent_p_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 34)(1, \"span\", 35);\n    i0.ɵɵtext(2, \"\\u00A0 Go to login page\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(1, _c1));\n  }\n}\n\nexport let OtpInputComponent = /*#__PURE__*/(() => {\n  class OtpInputComponent {\n    constructor(messageService, route, otpService, router, loginSrv, cookieService, sessionSrv) {\n      this.messageService = messageService;\n      this.route = route;\n      this.otpService = otpService;\n      this.router = router;\n      this.loginSrv = loginSrv;\n      this.cookieService = cookieService;\n      this.sessionSrv = sessionSrv;\n      this.otpformdata = new FormGroup({});\n      this.otpValues = ['otpInput1', 'otpInput2', 'otpInput3', 'otpInput4', 'otpInput5', 'otpInput6'];\n      this.enteredOtp = '';\n      this.timerVal = 120;\n      this.isuserLocked = false;\n      this.enableResend = false;\n      this.noOfAttempts = 0;\n      this.errorMessage = '';\n      this.subscriptionsList = [];\n      this.forgotPassword = false;\n      this.fpMessage = '';\n      this.onSubmitOtp = new EventEmitter();\n      this.onChangeEmail = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.forgotPassword = this.otpService.forgotPassword;\n      this.fpMessage = this.otpService.fpMessage;\n      this.route.queryParams.subscribe(param => {\n        this.otpType = atob(param.type);\n        Config.loggedIn = false;\n        this.loginSrv.sessionLogin = false;\n      });\n      this.otpformdata = this.setOtpForm(this.otpValues);\n      this.startTimer();\n      this.mobileNo = this.loginSrv.maskDetails(this.loginSrv.mobile);\n      this.emailId = this.loginSrv.maskEmail(this.loginSrv.email);\n    } // to set otp formcontrols for otpform\n\n\n    setOtpForm(elements) {\n      const group = {};\n      elements.forEach(key => {\n        group[key] = new FormControl('', Validators.required);\n      });\n      return new FormGroup(group);\n    } //to set timer for resend otp\n\n\n    startTimer() {\n      let otp_timer = timer(0, 1000);\n      this.timerVal = 120;\n      this.enableResend = false;\n      this.otpTimerSub = otp_timer.subscribe(t => {\n        var _a;\n\n        if (this.timerVal !== 0) {\n          this.timerVal--;\n        } else {\n          this.enableResend = true;\n          (_a = this.otpTimerSub) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        }\n      });\n    }\n\n    keyUpEvent(event, index) {\n      this.errorMessage = '';\n      let pos = index;\n\n      if (event.keyCode >= 48 && event.keyCode <= 57 || event.keyCode >= 96 && event.keyCode <= 105) {\n        pos = index + 1; // this.otpForm.get(this.formInput[index]).patchValue(event.target.value);\n      } else if (event.keyCode == 8 || event.key === 'Backspace' || event.keyCode == 46 || event.key === 'Delete') {\n        pos = index - 1;\n      } else if (event.keyCode == 37) {\n        //Left arrow\n        pos = index - 1;\n      } else if (event.keyCode == 39) {\n        //Right arrow\n        pos = index + 1;\n      } else if (event.keyCode == 13 && this.otpformdata.valid) {\n        if (this.forgotPassword) {\n          this.onSubmit();\n        } else if (!this.isuserLocked && !this.forgotPassword) {\n          this.onLogIn();\n        }\n      }\n\n      if (pos > -1 && pos < this.otpValues.length) {\n        this.rows._results[pos].nativeElement.focus();\n      }\n\n      this.setotpValue();\n    }\n\n    setotpValue() {\n      let val = '';\n      Object.keys(this.otpformdata.controls).forEach(k => {\n        if (this.otpformdata.controls[k].value) {\n          val += this.otpformdata.controls[k].value;\n        }\n      });\n      this.enteredOtp = val;\n    }\n\n    onCancel() {\n      this.otpformdata = this.setOtpForm(this.otpValues);\n      this.errorMessage = '';\n\n      if (this.forgotPassword) {\n        this.router.navigate(['/forget-password']);\n      } else {\n        this.router.navigate(['/login']);\n      }\n    }\n\n    onLogIn() {\n      let payload = {\n        otp: Number(this.enteredOtp)\n      };\n      this.subscriptionsList.push(this.otpService.verifyOTP(payload).subscribe(res => {\n        if (res && res.status == 'Success') {\n          Config.loggedIn = true;\n          this.loginSrv.sessionLogin = true;\n          this.cookieService.delete('JFSSSO', '/');\n          sessionStorage.setItem('JFSSO', this.cookieService.get('JFSSO'));\n          this.sessionSrv.startIdle();\n          this.router.navigate(['/landing']);\n        } // else{\n        // this.messageService.showMessage(\n        //   res?.message,\n        //   \"Error\",\n        //   \"warning-icon\",\n        //   \"CLOSE\"\n        // );\n        // }\n\n      }, error => {\n        this.errorMessage = error.error.message;\n        this.isuserLocked = error.error.isLocked;\n        this.noOfAttempts = error.error.attempt; // this.messageService.showMessage(\n        //   \"Something Went Wrong !!\",\n        //   \"Error\",\n        //   \"warning-icon\",\n        //   \"CLOSE\"\n        // );\n      }));\n    }\n\n    onResend() {\n      this.errorMessage = '';\n      this.otpformdata = this.setOtpForm(this.otpValues); // if (this.forgotPassword) {\n      //   this.resendOTPFP();\n      // } else {\n\n      let payload = {\n        flag: 'e',\n        email: this.loginSrv.email\n      };\n      this.subscriptionsList.push(this.loginSrv.sendOTP(payload).subscribe(res => {\n        var _a;\n\n        if (res && res.status == 'Success') {\n          (_a = this.otpTimerSub) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n          this.startTimer();\n        }\n      })); // }\n    }\n\n    onSubmit() {\n      this.onSubmitOtp.emit(this.enteredOtp); // let payload = {\n      //   otp: Number(this.enteredOtp),\n      // };\n      // this.subscriptionsList.push(\n      //   this.otpService.verifyFPOTP(payload).subscribe(\n      //     (res: any) => {\n      //       if (res && res.status == 'Success') {\n      //         this.otpService.fpMessage = res.message;\n      //         this.router.navigate(['/success-card']);\n      //       }\n      //     },\n      //     (error: any) => {\n      //       this.errorMessage = error.error.message;\n      //     }\n      //   )\n      // );\n    }\n\n    changeEmail() {\n      this.onChangeEmail.emit();\n    }\n\n    resendOTPFP() {\n      let payload = {\n        flag: this.otpType,\n        email: this.otpService.emailid\n      };\n      this.otpService.sendFPOTP(payload).subscribe(res => {\n        var _a;\n\n        if (res && res.status == 'Success') {\n          this.fpMessage = res.message;\n          (_a = this.otpTimerSub) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n          this.startTimer();\n        }\n      });\n    }\n\n    ngOnDestroy() {\n      var _a;\n\n      (_a = this.otpTimerSub) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n      if (this.subscriptionsList.length > 0) this.subscriptionsList.forEach(subscription => {\n        subscription.unsubscribe();\n      });\n    }\n\n  }\n\n  OtpInputComponent.ɵfac = function OtpInputComponent_Factory(t) {\n    return new (t || OtpInputComponent)(i0.ɵɵdirectiveInject(i1.MessageModalService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.OtpVerificationService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i4.LoginService), i0.ɵɵdirectiveInject(i5.CookieService), i0.ɵɵdirectiveInject(i6.SessionService));\n  };\n\n  OtpInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OtpInputComponent,\n    selectors: [[\"app-otp-input\"]],\n    viewQuery: function OtpInputComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.rows = _t);\n      }\n    },\n    inputs: {\n      isuserLocked: \"isuserLocked\",\n      noOfAttempts: \"noOfAttempts\",\n      errorMessage: \"errorMessage\",\n      emailIds: \"emailIds\"\n    },\n    outputs: {\n      onSubmitOtp: \"onSubmitOtp\",\n      onChangeEmail: \"onChangeEmail\"\n    },\n    decls: 29,\n    vars: 9,\n    consts: [[\"fxFlex\", \"100%\", \"fxLayoutAlign\", \"center center\", 1, \"otp-input-container\"], [\"fxFlex\", \"60%\", \"fxLayout\", \"column\", \"fxLayoutAlign\", \"center center\", \"fxLayoutGap\", \"20px\", \"fxLayoutGap.xs\", \"10px\", 1, \"signup-page\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 1, \"login-form\"], [\"fxLayoutGap\", \"15px\", \"fxLayout\", \"column\", \"fxLayoutAlign\", \"start start\"], [1, \"otp-close-ico\"], [1, \"primary-texr\"], [\"fxLayoutAlign\", \"start start\", \"fxLayout\", \"column\", 1, \"no-padding\", \"mt-20\"], [1, \"extra-bold\", \"heading\", \"no-margin\"], [1, \"mt-10\"], [1, \"\"], [1, \"primary-text\", \"cursor-pointer\", \"bold\", 3, \"click\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\", \"fxLayoutAlign\", \"start start\", 1, \"otp-input-bottom-container\"], [\"fxLayout\", \"column\", 3, \"formGroup\"], [\"fxLayout\", \"column\", \"fxLayoutAlign\", \"flex-start start\", 1, \"inputs-section\"], [\"fxLayoutAlign\", \"center center\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"8px\", 1, \"inputs\"], [\"fxFlex\", \"64px\", \"matInput\", \"\", \"placeholder\", \"-\", \"type\", \"text\", \"pattern\", \"[0-9]*\", \"inputmode\", \"numeric\", \"maxlength\", \"1\", \"autocomplete\", \"off\", \"appValidation\", \"\", 3, \"formControlName\", \"numericOnly\", \"keyup\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"error-text mt-10\", \"fxLayout\", \"row\", 4, \"ngIf\"], [\"class\", \"mini-text\", 4, \"ngIf\"], [\"fxFlex\", \"100\", \"class\", \"full-width mt-20\", \"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 4, \"ngIf\"], [\"fxFlex\", \"100\", \"class\", \"full-width\", \"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 4, \"ngIf\"], [\"fxLayoutAlign\", \"start center\", \"class\", \"mt-20\", 4, \"ngIf\"], [\"fxFlex\", \"64px\", \"matInput\", \"\", \"placeholder\", \"-\", \"type\", \"text\", \"pattern\", \"[0-9]*\", \"inputmode\", \"numeric\", \"maxlength\", \"1\", \"autocomplete\", \"off\", \"appValidation\", \"\", 3, \"formControlName\", \"numericOnly\", \"keyup\"], [\"formRow\", \"\"], [\"fxLayout\", \"row\", 1, \"error-text\", \"mt-10\"], [\"class\", \"sub-title-text\", 4, \"ngIf\"], [1, \"sub-title-text\"], [1, \"mini-text\"], [\"fxFlex\", \"100\", \"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 1, \"full-width\", \"mt-20\"], [\"fxFlex\", \"100\", \"type\", \"button\", \"mat-flat-button\", \"\", \"class\", \"primary-btn\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"fxFlex\", \"100\", \"type\", \"button\", \"mat-flat-button\", \"\", 1, \"primary-btn\", 3, \"disabled\", \"click\"], [\"fxFlex\", \"100\", \"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 1, \"full-width\"], [\"fxFlex\", \"100\", \"type\", \"button\", \"mat-flat-button\", \"\", \"class\", \"secondary-btn\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"fxFlex\", \"100\", \"type\", \"button\", \"mat-flat-button\", \"\", 1, \"secondary-btn\", 3, \"disabled\", \"click\"], [\"fxLayoutAlign\", \"start center\", 1, \"mt-20\"], [1, \"primary-text\", \"cursor-pointer\", \"bold\", 3, \"routerLink\"]],\n    template: function OtpInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"mat-card\", 3)(4, \"div\", 4)(5, \"mat-icon\", 5);\n        i0.ɵɵtext(6, \"clear\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"h1\", 7);\n        i0.ɵɵtext(9, \"OTP Verification\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p\", 8)(11, \"span\", 9);\n        i0.ɵɵtext(12, \"An One-Time Password has been sent to \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"br\");\n        i0.ɵɵtext(14);\n        i0.ɵɵelementStart(15, \"span\", 10);\n        i0.ɵɵlistener(\"click\", function OtpInputComponent_Template_span_click_15_listener() {\n          return ctx.changeEmail();\n        });\n        i0.ɵɵtext(16, \"\\u00A0Change Email ID\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(17, \"div\", 11)(18, \"form\", 12)(19, \"div\", 13)(20, \"div\", 14)(21, \"div\", 15);\n        i0.ɵɵtemplate(22, OtpInputComponent_input_22_Template, 2, 2, \"input\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(23, OtpInputComponent_div_23_Template, 3, 3, \"div\", 17);\n        i0.ɵɵtemplate(24, OtpInputComponent_div_24_Template, 3, 2, \"div\", 17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(25, OtpInputComponent_div_25_Template, 2, 0, \"div\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, OtpInputComponent_div_26_Template, 2, 1, \"div\", 19);\n        i0.ɵɵtemplate(27, OtpInputComponent_div_27_Template, 3, 2, \"div\", 20);\n        i0.ɵɵtemplate(28, OtpInputComponent_p_28_Template, 3, 2, \"p\", 21);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(14);\n        i0.ɵɵtextInterpolate1(\"\", ctx.emailIds, \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.otpformdata);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.otpValues);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage == \"Invalid OTP\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isuserLocked);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage == \"Invalid OTP\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isuserLocked);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isuserLocked);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isuserLocked);\n      }\n    },\n    dependencies: [i7.NgForOf, i7.NgIf, i2.RouterLink, i8.DefaultLayoutDirective, i8.DefaultLayoutGapDirective, i8.DefaultLayoutAlignDirective, i8.DefaultFlexDirective, i9.MatCard, i10.MatIcon, i11.MatButton, i12.MatInput, i13.ɵNgNoValidate, i13.DefaultValueAccessor, i13.NgControlStatus, i13.NgControlStatusGroup, i13.MaxLengthValidator, i13.PatternValidator, i13.FormGroupDirective, i13.FormControlName, i14.ValidationDirective, i7.DatePipe],\n    styles: [\".otp-input-container[_ngcontent-%COMP%]{width:100%;height:100vh}.otp-input-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]{width:500px}.otp-input-container[_ngcontent-%COMP%]   .mat-card[_ngcontent-%COMP%]{min-height:320px;width:100%;border-radius:16px!important;padding:32px!important}.otp-input-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .primary-btn[_ngcontent-%COMP%]{border-radius:50px;font-size:var(--font-size-sub-title)}.otp-input-container[_ngcontent-%COMP%]   .description[_ngcontent-%COMP%]{width:90%}.otp-input-container[_ngcontent-%COMP%]   .description-text[_ngcontent-%COMP%]{width:50%!important;margin-bottom:15px}.otp-input-container[_ngcontent-%COMP%]   .heading[_ngcontent-%COMP%]{color:var(--global-black);font-size:var(--font-size-big-head)}.otp-input-container[_ngcontent-%COMP%]   .sub-heading[_ngcontent-%COMP%]{font-size:9px}.otp-input-container[_ngcontent-%COMP%]   .secondary-btn[_ngcontent-%COMP%]{border:none!important;border-radius:50px!important;background-color:var(--global-white)!important;box-shadow:0 0 1px #0000008f!important;cursor:pointer!important}.otp-input-container[_ngcontent-%COMP%]   .input-section[_ngcontent-%COMP%]{padding:0 20px}.otp-input-container[_ngcontent-%COMP%]   .note-section[_ngcontent-%COMP%]{font-size:10px;padding:20px;width:80%}.otp-input-container[_ngcontent-%COMP%]   .btn-section[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:20px;width:100%}.otp-input-container[_ngcontent-%COMP%]   .otp-input-bottom-container[_ngcontent-%COMP%]{width:100%;row-gap:15px}.otp-input-container[_ngcontent-%COMP%]   .mat-mdc-radio-button[_ngcontent-%COMP%] ~ .mat-mdc-radio-button[_ngcontent-%COMP%]{margin-left:16px}.otp-input-container[_ngcontent-%COMP%]   .description[_ngcontent-%COMP%]{margin:10px 0}.otp-input-container[_ngcontent-%COMP%]   [_ngcontent-%COMP%]::placeholder{font-size:var(--font-size-title);color:var(--color-black)}.otp-input-container[_ngcontent-%COMP%]   .inputs[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{all:unset;padding:15px 0;border-bottom:2px solid rgba(0,0,0,.65)!important;text-align:center;font-size:var(--font-size-head)}.otp-input-container[_ngcontent-%COMP%]   .resend-section[_ngcontent-%COMP%]{width:100%!important}.otp-input-container[_ngcontent-%COMP%]   .otp-close-ico[_ngcontent-%COMP%]{position:absolute;right:24px;top:20px}@media only screen and (max-width: 599px){.otp-input-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]{min-width:300px;width:100%}}\"]\n  });\n  return OtpInputComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}