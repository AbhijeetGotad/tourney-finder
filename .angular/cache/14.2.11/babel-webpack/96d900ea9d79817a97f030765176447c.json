{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./loading-spinner.service\"; // import { NgxSpinnerService } from \"ngx-spinner\";\n\nexport let LoadingSpinnerComponent = /*#__PURE__*/(() => {\n  class LoadingSpinnerComponent {\n    constructor(loadingSpinnerService) {\n      this.loadingSpinnerService = loadingSpinnerService;\n      this.loadingText = \"Loading...\";\n      this.threshold = 500;\n      this.timeout = 0;\n      this.zIndex = 9999;\n      this.startTime = 0;\n      this.endTime = new Date().getTime();\n    }\n\n    ngOnInit() {\n      let self = this;\n      this.loadingText = \"Loading...\";\n      this.loadingSpinnerService.loaderStatus.subscribe(val => {\n        if (val) {\n          this.objLoaderStatus = true; // this.spinner.show();\n\n          if (this.startTime == 0) {\n            this.startTime = new Date().getTime();\n          }\n\n          if (typeof this.intervalObject == \"undefined\") {\n            this.intervalObject = window.setInterval(function () {\n              self.setDisplayText();\n            }, 1000);\n          }\n        } else {\n          this.objLoaderStatus = false; // this.spinner.hide();\n\n          this.loadingText = \"\";\n          this.startTime = 0;\n\n          if (typeof this.intervalObject != \"undefined\") {\n            window.clearInterval(this.intervalObject);\n            this.intervalObject = undefined;\n          }\n        }\n      });\n    }\n\n    setDisplayText() {\n      if (this.startTime != 0) {\n        this.loadingText = new Date().getTime() - this.startTime > 5000 ? \"This is taking longer than expected, please wait....\" : \"Please wait...\";\n      } else {\n        this.loadingText = \"Loading....\";\n      }\n    }\n\n  }\n\n  LoadingSpinnerComponent.ɵfac = function LoadingSpinnerComponent_Factory(t) {\n    return new (t || LoadingSpinnerComponent)(i0.ɵɵdirectiveInject(i1.LoadingSpinnerService));\n  };\n\n  LoadingSpinnerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoadingSpinnerComponent,\n    selectors: [[\"app-loading-spinner\"]],\n    decls: 0,\n    vars: 0,\n    template: function LoadingSpinnerComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return LoadingSpinnerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}