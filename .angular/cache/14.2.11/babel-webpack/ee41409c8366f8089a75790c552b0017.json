{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/message-modal-service\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/flex-layout/flex\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/expansion\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/dialog\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/forms\";\n\nfunction AddCompetitionModelComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵlistener(\"click\", function AddCompetitionModelComponent_div_3_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n\n      const _r3 = i0.ɵɵreference(7);\n\n      return i0.ɵɵresetView(_r3 == null ? null : _r3.click());\n    });\n    i0.ɵɵelementStart(1, \"div\")(2, \"div\", 24);\n    i0.ɵɵelement(3, \"button\", 25);\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5, \"Please select and upload files upto 2\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 26, 27);\n    i0.ɵɵlistener(\"change\", function AddCompetitionModelComponent_div_3_Template_input_change_6_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.checkFormats($event, false));\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"max-width\", ctx_r0.dragMaxWidth, \"px\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"multiple\", ctx_r0.multiple);\n  }\n}\n\nfunction AddCompetitionModelComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function AddCompetitionModelComponent_div_4_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deleteFile(ctx_r7.imageUrls[0]));\n    });\n    i0.ɵɵtext(2, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 30);\n    i0.ɵɵelement(4, \"img\", 31);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"src\", ctx_r1.imageUrls[0], i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction AddCompetitionModelComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const fromLocation_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", fromLocation_r9, \" \");\n  }\n}\n\nexport let AddCompetitionModelComponent = /*#__PURE__*/(() => {\n  class AddCompetitionModelComponent {\n    constructor(modalService, sanitizer) {\n      this.modalService = modalService;\n      this.sanitizer = sanitizer;\n      this.choosenFiles = [];\n      this.imageUrls = [];\n      this.acceptedFormats = [];\n      this.formatErrorString = '';\n      this.multiple = true;\n      this.locations = [];\n    }\n\n    onDragOver(evt) {\n      evt.preventDefault();\n      evt.stopPropagation();\n    }\n\n    onDragLeave(evt) {\n      evt.preventDefault();\n      evt.stopPropagation();\n    }\n\n    onDrop(evt) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      this.checkFormats(evt, true);\n    }\n\n    ngOnInit() {\n      this.createFormatRegex();\n    }\n\n    createFormatRegex() {\n      let regexString = '';\n\n      for (let i = 0; i < this.acceptedFormats.length; i++) {\n        regexString = regexString + this.acceptedFormats[i];\n        regexString = regexString + '|';\n\n        if (i == this.acceptedFormats.length - 1 && this.acceptedFormats.length != 1) {\n          this.formatErrorString = this.formatErrorString + ' or ' + this.acceptedFormats[i];\n        } else if (this.acceptedFormats.length == 1) {\n          this.formatErrorString = this.acceptedFormats[i];\n        } else {\n          this.formatErrorString = this.formatErrorString + this.acceptedFormats[i] + ', ';\n        }\n      }\n\n      regexString = regexString.slice(0, -1);\n      this.formatRegex = new RegExp(regexString, 'i');\n    }\n\n    checkFormats(evt, fromDrop) {\n      let files = fromDrop ? evt.dataTransfer.files : evt.target.files;\n      let formatValid = true;\n\n      if (this.acceptedFormats.length > 0) {\n        for (let i = 0; i < files.length; i++) {\n          if (!this.formatRegex.test(files[i].name)) {\n            this.modalService.showMessage(`Please upload a file with ${this.formatErrorString} format(s)`, 'Error', 'warning-icon', 'Close');\n            formatValid = false;\n            return;\n          } else if (this.fileSizeLimit && files[i].size > this.fileSizeLimit) {\n            this.modalService.showMessage(`Please upload a file with size less than ${this.fileSizeLimit !== 0 ? this.fileSizeLimit / 1000000 : this.fileSizeLimit} MB.`, 'Error', 'warning-icon', 'Close');\n            formatValid = false;\n            return;\n          }\n        }\n      }\n\n      if (this.maxSize) {\n        for (let i = 0; i < files.length; i++) {\n          if (files[i].size > this.acceptedFileSize) {\n            this.modalService.showMessage(`Please upload a file with size less than ${this.maxSize}`, 'Error', 'warning-icon', 'Close');\n            formatValid = false;\n            return;\n          }\n        }\n      }\n\n      if (formatValid) {\n        this.uploadFiles(evt, fromDrop);\n      }\n    }\n\n    uploadFiles(evt, fromDrop) {\n      const files = fromDrop ? evt.dataTransfer.files : evt.target.files;\n\n      if (files.length > 0) {\n        let fileLength = this.choosenFiles.length == 0 ? files.length : this.choosenFiles.length;\n\n        if (this.multiple) {\n          if (fileLength >= this.maxUploadLimit && this.choosenFiles.length != 0) {\n            this.modalService.showMessage(`Cannot upload more than ${this.maxUploadLimit} file(s)`, 'Error', 'warning-icon', 'Close');\n            return;\n          } else {\n            this.uploadMultipleFiles(files);\n          }\n        } else {\n          if (fileLength >= 1 && this.choosenFiles.length != 0) {\n            this.modalService.showMessage('Cannot upload more than 1 file', 'Error', 'warning-icon', 'Close');\n            return;\n          } else {\n            this.uploadMultipleFiles(files);\n          }\n        }\n      }\n    }\n\n    uploadMultipleFiles(files) {\n      for (let i = 0; i < files.length; i++) {\n        this.choosenFiles.push(files[i]);\n        let reader = new FileReader();\n        reader.readAsDataURL(files[i]);\n\n        reader.onloadend = e => {\n          let file = this.sanitizer.bypassSecurityTrustUrl(e.target.result.toString());\n          this.imageUrls.push(file);\n        };\n      }\n    }\n\n    deleteFile(file) {\n      this.modalService.showConfirmation('Are you sure you want to delete the selected file?', 'Confirmation', 'confirmation-icon', reason => {\n        if (reason === 'YES') {\n          let fileIndex = this.choosenFiles.indexOf(file);\n          this.choosenFiles.splice(fileIndex, 1);\n          this.imageUrls.splice(fileIndex, 1);\n        }\n      });\n    }\n\n    uploadExistingFiles(files) {\n      for (let i = 0; i < files.length; i++) {\n        this.choosenFiles.push(files[i]);\n      }\n    }\n\n  }\n\n  AddCompetitionModelComponent.ɵfac = function AddCompetitionModelComponent_Factory(t) {\n    return new (t || AddCompetitionModelComponent)(i0.ɵɵdirectiveInject(i1.MessageModalService), i0.ɵɵdirectiveInject(i2.DomSanitizer));\n  };\n\n  AddCompetitionModelComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddCompetitionModelComponent,\n    selectors: [[\"app-add-competition-model\"]],\n    hostBindings: function AddCompetitionModelComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"dragover\", function AddCompetitionModelComponent_dragover_HostBindingHandler($event) {\n          return ctx.onDragOver($event);\n        })(\"dragleave\", function AddCompetitionModelComponent_dragleave_HostBindingHandler($event) {\n          return ctx.onDragLeave($event);\n        })(\"drop\", function AddCompetitionModelComponent_drop_HostBindingHandler($event) {\n          return ctx.onDrop($event);\n        });\n      }\n    },\n    decls: 47,\n    vars: 3,\n    consts: [[\"mat-dialog-close\", \"\", 1, \"outside-close-icon\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"10\"], [\"fxLayout\", \"column\", \"fxFlex\", \"60\", 1, \"tile-add\"], [\"class\", \"attach-drag-drop-competition cursor-pointer\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"drag-drop-container\", \"fxFlex\", \"100\", \"fxLayout\", \"column\", \"fxLayoutAlign\", \"space-between end\", 4, \"ngIf\"], [\"fxLayout\", \"column\", \"fxFlex\", \"40\", 1, \"tile-add\"], [\"fxLayout\", \"column\", \"fxFlex\", \"100\"], [\"fxLayoutAlign\", \"center stretch\", \"fxLayout\", \"column\", \"fxFlex\", \"100\", 1, \"grid-layout-column\"], [\"fxFlex\", \"100\", \"fxLayout\", \"column\", \"fxLayoutGap\", \"5px\"], [\"fxLayout\", \"column\", \"fxFlex.gt-xs\", \"24\", \"fxFlex.xs\", \"100\", 1, \"outline-input\", \"no-label\"], [1, \"primary-text\", \"small-text\", \"mb-5\"], [1, \"error-text\"], [\"LayoutGap\", \"20px\", \"fxFlex\", \"100\"], [1, \"panel-header\"], [\"fxLayout\", \"column\", \"fxLayoutGap\", \"10px\"], [1, \"primary-text\"], [4, \"ngFor\", \"ngForOf\"], [\"appearance\", \"outline\", \"fxFlex\", \"100\"], [\"matInput\", \"\", \"placeholder\", \"Write here...\", \"maxlength\", \"100\"], [\"fxFlex\", \"100\", \"appearance\", \"outline\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"end end\", 1, \"action-btn-row\", \"modal-footer\", \"separator-top\", \"p-10\"], [1, \"small-tertiary-button\"], [\"type\", \"submit\", 1, \"small-primary-button\"], [1, \"attach-drag-drop-competition\", \"cursor-pointer\", 3, \"click\"], [\"fxLayout\", \"column\", \"fxLayoutGap\", \"10px\", \"fxLayoutAlign\", \"center center\", 1, \"drag-drop-container\"], [\"type\", \"button\", \"mat-icon-button\", \"\", 1, \"upload-ico\"], [\"type\", \"file\", 1, \"hidden\", 3, \"multiple\", \"change\"], [\"fileDropRef\", \"\"], [\"fxFlex\", \"100\", \"fxLayout\", \"column\", \"fxLayoutAlign\", \"space-between end\", 1, \"drag-drop-container\"], [1, \"small-tertiary-button\", \"mb-5\", 3, \"click\"], [1, \"cover\"], [\"alt\", \"uploaded-img\", 1, \"cover-image\", 3, \"src\"]],\n    template: function AddCompetitionModelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtemplate(3, AddCompetitionModelComponent_div_3_Template, 8, 3, \"div\", 3);\n        i0.ɵɵtemplate(4, AddCompetitionModelComponent_div_4_Template, 5, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-card\", 5)(6, \"div\", 6)(7, \"form\", 7)(8, \"div\", 8)(9, \"div\", 9)(10, \"label\", 10);\n        i0.ɵɵtext(11, \"From\");\n        i0.ɵɵelementStart(12, \"span\", 11);\n        i0.ɵɵtext(13, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"mat-accordion\", 12)(15, \"mat-expansion-panel\", 13)(16, \"mat-expansion-panel-header\")(17, \"mat-panel-title\", 14)(18, \"div\", 15);\n        i0.ɵɵtext(19, \" Select From Location \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(20, AddCompetitionModelComponent_div_20_Template, 2, 1, \"div\", 16);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"div\", 9)(22, \"label\", 10);\n        i0.ɵɵtext(23, \"To\");\n        i0.ɵɵelementStart(24, \"span\", 11);\n        i0.ɵɵtext(25, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"mat-form-field\", 17);\n        i0.ɵɵelement(27, \"input\", 18);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 9)(29, \"label\", 10);\n        i0.ɵɵtext(30, \"Onward Date & Time\");\n        i0.ɵɵelementStart(31, \"span\", 11);\n        i0.ɵɵtext(32, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"mat-form-field\", 19);\n        i0.ɵɵelement(34, \"input\", 18);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"div\", 9)(36, \"label\", 10);\n        i0.ɵɵtext(37, \"Return Date & Time\");\n        i0.ɵɵelementStart(38, \"span\", 11);\n        i0.ɵɵtext(39, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(40, \"mat-form-field\", 19);\n        i0.ɵɵelement(41, \"input\", 18);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(42, \"div\", 20)(43, \"button\", 21);\n        i0.ɵɵtext(44, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"button\", 22);\n        i0.ɵɵtext(46, \" Submit \");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.choosenFiles.length == 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.choosenFiles.length != 0);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngForOf\", ctx.locations);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.DefaultLayoutDirective, i4.DefaultLayoutGapDirective, i4.DefaultLayoutAlignDirective, i4.DefaultFlexDirective, i5.MatCard, i6.MatAccordion, i6.MatExpansionPanel, i6.MatExpansionPanelHeader, i6.MatExpansionPanelTitle, i7.MatButton, i8.MatDialogClose, i9.MatFormField, i10.MatInput, i11.ɵNgNoValidate, i11.NgControlStatusGroup, i11.NgForm],\n    styles: [\".tile-add[_ngcontent-%COMP%]{height:80vh;width:50vh}.cover[_ngcontent-%COMP%]{overflow:auto}.cover-image[_ngcontent-%COMP%]{object-fit:cover;height:100%;width:100%}.attach-drag-drop-competition[_ngcontent-%COMP%]   .attached-file-wrapper[_ngcontent-%COMP%]{border:1px solid var(--grey-60);border-radius:40px;padding:10px;background:var(--global-white)}.attach-drag-drop-competition[_ngcontent-%COMP%]   .drag-drop-container[_ngcontent-%COMP%]{background:var(--global-white) 0% 0% no-repeat padding-box;box-shadow:0 0 6px var(--box-shadow-color);border:1px dashed var(--grey-60);border-radius:10px;height:80vh;padding:10px;margin-bottom:5px}.attach-drag-drop-competition[_ngcontent-%COMP%]   .drag-drop-container[_ngcontent-%COMP%]   button.upload-ico[_ngcontent-%COMP%]{background-image:url(dragdrop-upload-ico.svg);background-size:contain;background-position:center;background-repeat:no-repeat;width:20px;height:20px;border-radius:0}\"]\n  });\n  return AddCompetitionModelComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}